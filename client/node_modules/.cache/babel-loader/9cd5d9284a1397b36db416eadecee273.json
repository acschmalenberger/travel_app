{"ast":null,"code":"import _defineProperty from \"/Users/alyssaschmalenberger/Desktop/travel_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/alyssaschmalenberger/Desktop/travel_app/client/src/components/Form2/CustomInput.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\"; // @material-ui/icons\n\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from \"../\";\nvar useStyles = makeStyles(styles);\nexport default function CustomInput(props) {\n  var _classNames, _classNames2;\n\n  var classes = useStyles();\n  var formControlProps = props.formControlProps,\n      labelText = props.labelText,\n      id = props.id,\n      labelProps = props.labelProps,\n      inputProps = props.inputProps,\n      error = props.error,\n      success = props.success;\n  var labelClasses = classNames((_classNames = {}, _defineProperty(_classNames, \" \" + classes.labelRootError, error), _defineProperty(_classNames, \" \" + classes.labelRootSuccess, success && !error), _classNames));\n  var underlineClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.underlineError, error), _defineProperty(_classNames2, classes.underlineSuccess, success && !error), _defineProperty(_classNames2, classes.underline, true), _classNames2));\n  var marginTop = classNames(_defineProperty({}, classes.marginTop, labelText === undefined));\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, formControlProps, {\n    className: formControlProps.className + \" \" + classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), labelText !== undefined ? /*#__PURE__*/React.createElement(InputLabel, Object.assign({\n    className: classes.labelRoot + labelClasses,\n    htmlFor: id\n  }, labelProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), labelText) : null, /*#__PURE__*/React.createElement(Input, Object.assign({\n    classes: {\n      root: marginTop,\n      disabled: classes.disabled,\n      underline: underlineClasses\n    },\n    id: id\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), error ? /*#__PURE__*/React.createElement(Clear, {\n    className: classes.feedback + \" \" + classes.labelRootError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }) : success ? /*#__PURE__*/React.createElement(Check, {\n    className: classes.feedback + \" \" + classes.labelRootSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }) : null);\n}\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/alyssaschmalenberger/Desktop/travel_app/client/src/components/Form2/CustomInput.js"],"names":["React","classNames","PropTypes","makeStyles","FormControl","InputLabel","Input","Clear","Check","styles","useStyles","CustomInput","props","classes","formControlProps","labelText","id","labelProps","inputProps","error","success","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","marginTop","undefined","className","formControl","labelRoot","root","disabled","feedback","propTypes","node","object","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n// @material-ui/icons\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport styles from \"../\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n    const classes = useStyles();\n    const {\n        formControlProps,\n        labelText,\n        id,\n        labelProps,\n        inputProps,\n        error,\n        success\n    } = props;\n\n    const labelClasses = classNames({\n        [\" \" + classes.labelRootError]: error,\n        [\" \" + classes.labelRootSuccess]: success && !error\n    });\n    const underlineClasses = classNames({\n        [classes.underlineError]: error,\n        [classes.underlineSuccess]: success && !error,\n        [classes.underline]: true\n    });\n    const marginTop = classNames({\n        [classes.marginTop]: labelText === undefined\n    });\n    return (\n        <FormControl\n        {...formControlProps}\n        className={formControlProps.className + \" \" + classes.formControl}\n        >\n        {labelText !== undefined ? (\n            <InputLabel\n            className={classes.labelRoot + labelClasses}\n            htmlFor={id}\n            {...labelProps}\n            >\n            {labelText}\n            </InputLabel>\n        ) : null}\n        <Input\n            classes={{\n            root: marginTop,\n            disabled: classes.disabled,\n            underline: underlineClasses\n            }}\n            id={id}\n            {...inputProps}\n        />\n        {error ? (\n            <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n        ) : success ? (\n            <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n        ) : null}\n        </FormControl>\n    );\n}\n\nCustomInput.propTypes = {\n    labelText: PropTypes.node,\n    labelProps: PropTypes.object,\n    id: PropTypes.string,\n    inputProps: PropTypes.object,\n    formControlProps: PropTypes.object,\n    error: PropTypes.bool,\n    success: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}